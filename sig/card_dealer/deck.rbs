module CardDealer
  class Deck
    attr_reader cards: Array[Card]
    attr_reader seed: Integer

    @decks: Integer
    @ranks: :highest | :lowest | Array[String]
    @suits: :all | Array[String]

    def initialize: (
        ?decks: Integer,
        ?cards_per_suit: Integer,
        ?ranks: :highest | :lowest | Array[String],
        ?suits: :all | Array[String]) -> void

    def reset: -> self

    def shuffle: (?seed: Integer) -> self

    def to_a: -> Array[String]

    def to_s: -> String

    private

    def build_suits: (suits: :all | Array[String]) -> Array[String]

    def build_ranks: (ranks: :highest | :lowest | Array[String]) -> Array[String]
  end
end
